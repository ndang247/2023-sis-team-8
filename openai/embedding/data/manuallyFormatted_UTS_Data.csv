URL,Content
https://www.handbook.uts.edu.au/eng/area/ug.html,"Information Regarding Undergraduate Engineering - The Faculty of Engineering and Information Technology's flagship course is the five-year Bachelor of Engineering (Honours) Diploma in Professional Engineering Practice (C09067). It also offers a four-year Bachelor of Engineering (Honours) (C09066) and a three-year Bachelor of Engineering Science (C10066) to international students only, and a number of combined degrees in partnership with other faculties. The same educational philosophy underpins all awards: students undertake a set of core subjects, a set of practice subjects that defines their major and, in some cases, a set of electives. The Diploma in Professional Engineering Practice award requires the completion of two internships. The single Bachelor of Engineering (Honours) and combined Bachelor of Engineering (Honours) courses require the completion of 12 weeks of work experience. The recognition of prior learning policies and assumed knowledge are the same for all courses."
https://www.handbook.uts.edu.au/eng/area/ug.html,"Course structure - The course comprises five principal components: (i) core program; (ii) Engineering Practice Program; (iii) field of practice (major); (iv) electives; and (v) Capstone Project. The core program, Engineering Practice Program and Capstone Project are common to all students undertaking the BE (Hons) DipProfEngPrac."
https://www.handbook.uts.edu.au/eng/area/ug.html,"Core program -This component provides a framework covering knowledge, skills and attributes that are relevant to all engineers across all fields of practice. It consists of common mathematics and physics subjects, and common engineering subjects which draw on several fields of engineering practice to develop interdisciplinary knowledge and skills within the larger context of professional practice. The core program runs throughout the course from admission to graduation. Students take differing combinations of subjects in their first year, and in each successive year, depending on their choice of major."
https://www.handbook.uts.edu.au/eng/area/ug.html,"Engineering Practice Program - The Engineering Practice Program supports and assesses student learning in workplace and community environments. Its objectives are to prepare students for engineering work experience, to support them during that experience and to assist them in maximising learning. The program also supports the integration of this experiential learning with the theoretical and practical aspects of the academic curriculum. A fundamental objective is to develop the ability to learn in a wide variety of modes and contexts and to critique and contribute to those learning environments on a lifelong basis. The program is administered through a series of subjects offered in various modes. Students enrol in the program as a whole and are guided through the respective modules. Students are ultimately responsible for their progression through the program. Academic staff and workplace mentors and supervisors act as facilitators; administrative staff assist in ensuring that students' progress is recorded and validated; and Industry Partnering Unit staff assist students in securing suitable work placements and in establishing cooperative programs with industry and the community. The minimum time in the workplace required to satisfy each engineering internship subject is 22 weeks. In total, however, 48 weeks must be gained by the required deadline to meet course requirements and to be eligible to graduate. Internships are organised into two blocks of six months each. Students are required to undertake the relevant prerequisite subjects prior to undertaking their internships and in a session following an internship are required to enrol in the appropriate review subjects. Credit point limits also apply to some of these subjects. While students are encouraged to undertake additional work experience, they are only permitted to complete each of the two official internships once."
https://www.handbook.uts.edu.au/eng/area/ug.html,"STM90993 Professional Engineering Practice Program subjects - Details of prerequisite subjects and subjects required to be completed after each internship are as follows: 41035 Professional Practice Preparation1 - 3cp, 41036 Professional Experience 1 - 6cp , 41037 Work Integrated Learning 1 - 12cp, 41038 Professional Practice Review 1 - 3cp, 41045 Professional Practice Preparation 2 - 3cp, 41046 Professional Experience 2 - 6cp, 41047 Work Integrated Learning 2 - 12p, 41048 Professional Practice Review 2 - 3cp, Total - 48p"
https://www.handbook.uts.edu.au/eng/area/ug.html,"Electives - With the exception of combined degrees and double majors, students may devote 24 credit points to electives. A range of electives may be taken to broaden or deepen knowledge. The elective component also provides a mechanism for recognition of prior learning. Further, the elective component affords maximum flexibility for students wishing to undertake study on international exchange with our overseas partner institutions. Students are not permitted to take an elective subject that covers substantially the same material as a required subject or a subject already undertaken. Undergraduate students may enrol in approved UTS Engineering postgraduate subjects provided they have completed at least 120 credit points of their undergraduate degree and met prerequisite requirements. Undergraduate students may undertake up to four approved postgraduate subjects. A maximum of three approved postgraduate subjects recently undertaken as part of an undergraduate degree may be used to apply for exemptions from a UTS Engineering master's degree provided the subjects fulfil the equivalent subject requirements."
https://www.handbook.uts.edu.au/courses/c09067.html,"C09067v6 Bachelor of Engineering (Honours) Diploma in Professional Engineering Practice - The program leading to the award of Bachelor of Engineering (Honours) Diploma in Professional Engineering Practice (C09067) (BE(Hons) DipProfEngPrac) is a comprehensive preparation for careers in the professional practice of engineering. The BE(Hons) DipProfEngPrac is a combined award and the Diploma in Professional Engineering Practice is not available separately. Both elements of the program are closely interwoven and interdependent, and prepare students for professional engineering internships by linking theory and application. The degrees combining engineering with business, international studies, medical science and science may also be combined with the Diploma in Professional Engineering Practice. As noted above, the combination of formal academic learning in the University and experiential learning in the workplace is called 'cooperative education'. UTS Engineering courses have embodied this principle for over 30 years. The courses are highly regarded in industry and, according to many reports and surveys, graduates have enjoyed correspondingly high employment rates â€“ the highest of any engineering degree courses in Australia. Engineering education in many countries is undergoing revolutionary change and the UTS program is at the forefront of much of this change. Overview - This program is a comprehensive preparation for careers in the professional practice of engineering. Students learn to deal with complex systems and manage large-scale projects using the most appropriate emerging technologies. The course offers an authentic, professionally focused and practice-based education program with two sessions of internship (normally paid) in a real workplace setting. A number of the areas of study are available with explicit specialisations. For example, Civil Engineering is available with specialisations in Structures and Construction. Students can also focus on or broaden their studies by completing electives. By appropriate choice of electives, students can gain knowledge in a second engineering discipline, obtain a sub-major in a different field or study postgraduate-level subjects and apply for credit towards an engineering master's degree. The concept has been strongly endorsed in wide-ranging industry consultations. Interaction between work experience and academic curriculum is very strong, giving the program a depth that no other full-time academic course can match. Course aims - The course aims to equip graduates with the skills and attributes needed for professional practice and leadership. It is based on the themes of academic development, personal development and professional formation. It provides sound foundations in engineering theory, technical expertise and knowledge of professional practice, while also developing academic literacy, advocacy skills and social awareness so that graduates become lifelong learners and effective citizens in many different capacities. Career options - Career options depend on the major chosen. Course intended learning outcomes - A.1 - Bachelor of Engineering (Honours) Diploma in Professional Engineering Practice graduates are culturally and historically well informed, able to co-design projects as respectful professionals when working in and with Aboriginal and Torres Strait Islander communities, B.1 - Bachelor of Engineering (Honours) Diploma in Professional Engineering Practice graduates identify, engage, interpret and analyse stakeholder needs and cultural perspectives, establish priorities and goals, and identify constraints, uncertainties and risks (social, ethical, cultural, legislative, environmental, economics etc.) to define the system requirements, C.1 - Bachelor of Engineering (Honours) Diploma in Professional Engineering Practice graduates apply research, problem solving, design and decision-making methodologies to develop components, systems and processes to meet specified requirements, D.1 - Bachelor of Engineering (Honours) Diploma in Professional Engineering Practice graduates apply abstraction, mathematics and discipline fundamentals, software, tools and techniques to evaluate, implement and operate systems, E.1 - Bachelor of Engineering (Honours) Diploma in Professional Engineering Practice graduates work as an effective member or leader of diverse teams, communicating effectively and operating within cross-disciplinary and cross-cultural contexts in the workplace, F.1 - Bachelor of Engineering (Honours) Diploma in Professional Engineering Practice graduates critically self-review their performance to improve themselves, their teams and workplace. They take responsibility and accountability for their own life long learning. Admission requirements - Applicants must have completed an Australian Year 12 qualification, Australian Qualifications Framework Diploma, or equivalent Australian or overseas qualification at the required level. Current school leavers are advised to complete the Year 12 Engineering and IT Questionnaire. The questionnaire allows applicants to demonstrate their strong motivation to study engineering or IT at UTS and may assist applicants whose ATAR falls short of the required cut-off by up to three points. Non-current school leavers are advised to complete the employment question on their UAC application and provide supporting statements of employment to UAC, as adjustment factors may be applied on the basis of relevant work experience. The English proficiency requirement for international students or local applicants with international qualifications is: Academic IELTS: 6.5 overall with a writing score of 6.0; or TOEFL: paper based: 550-583 overall with TWE of 4.5, internet based: 79-93 overall with a writing score of 21; or AE5: Pass; or PTE: 58-64 with a writing score of 50; or C1A/C2P: 176-184 with a writing score of 169. Eligibility for admission does not guarantee offer of a place. Local students - Entry to individual engineering majors is subject to ATAR requirements. International students - Applicants who successfully complete a recognised pathway program are eligible to apply. Visa requirement: To obtain a student visa to study in Australia, international students must enrol full time and on campus. Australian student visa regulations also require international students studying on student visas to complete the course within the standard full-time duration. Students can extend their courses only in exceptional circumstances. Pathway course - Applicants who complete the UTS College Diploma of Engineering with no more than two subject failures are guaranteed admission to the Bachelor of Engineering (Honours) Diploma in Professional Engineering Practice with up to 48 credit points of recognition of prior learning (depending on the major selected). Inherent (essential) requirements - Inherent (essential) requirements are academic and non-academic requirements that are essential to the successful completion of a course. Prospective and current students should carefully read the Inherent (Essential) Requirements Statement below and consider whether they might experience challenges in successfully completing this course. This Statement should be read in conjunction with the UTS Student Rules. Prospective or current student concerned about their ability to meet these requirements should discuss their concerns with the Academic Liaison Officer in their faculty or school and/or UTS Accessibility Service on 9514 1177 or at accessibility@uts.edu.au. UTS will make reasonable adjustments to teaching and learning, assessment, professional experiences, course related work experience and other course activities to facilitate maximum participation by students with disabilities, carer responsibilities, and religious or cultural obligations in their courses. For course specific information see the Faculty of Engineering & Information Technology Inherent (Essential) Requirements Statement. Assumed knowledge - HSC Mathematics Extension 1; Physics; and English Standard. English Advanced is recommended. For the Biomedical, Civil, and Civil and Environmental Engineering majors, Chemistry is recommended. For the Software Engineering major, a sound knowledge of the fundamentals of programming is recommended. Recognition of prior learning - Students who have previously undertaken relevant study at a recognised tertiary education institution may be eligible for recognition of prior learning (RPL) if the subjects completed are deemed by the faculty to be equivalent to subjects in the student's course. Subjects completed as part of a qualification in which study ceased no more than 10 years prior to the student's first semester in the relevant UTS Engineering degree may be considered. Limits apply to the number of credit points of RPL granted. Course duration and attendance - Full-time students normally complete the program in five years, which includes four years of study plus two periods of engineering internship in the workplace totalling at least 48 weeks. The internship is typically taken in the third or fourth session and again in the seventh or eighth session. It is possible to complete the program entirely on a part-time basis, with continuous concurrent employment, by enrolling at half the full-time rate; however, this is not recommended. Students wishing to make extensive use of part-time attendance are strongly encouraged to negotiate with their employers for at least two full-time sessions of study somewhere through the program. Course structure - Students are required to complete 240 credit points, comprising:core program: 48 credit points, major (field of practice), including capstone: 120 credit points , professional engineering practice program: 48 credit points, plus 48 weeks of approved internship, electives (within this component students may undertake a faculty-approved sub-major totalling 24 credit points): 24 credit points. Students in the Civil Engineering major, Structures stream are recommended to complete 12 credit points of electives from approved postgraduate structural engineering subjects. Students in the Civil and Environmental Engineering, Electrical and Electronic Engineering, and Mechanical and Mechatronic Engineering majors are required to select the specialist stream in their major in place of the electives. The major is selected at the time of application to the course; however, it is possible to apply to change major at a later date. Students admitted to the flexible major should decide by the end of the first year of full-time study whether to transfer to a designated major or continue with the flexible program. The Diploma in Professional Engineering Practice is not offered as a standalone qualification. Industrial training/professional practice - The Diploma in Professional Engineering Practice requires the completion of two six-month internships and the Professional Engineering Practice Program. Completing 12 months of relevant engineering experience before graduating enables students to link learning in the workplace and learning at university, with each experience enhancing the other. Course completion requirements - In the course you will need to select one of the following 24 credit points: CBK90011 Electives 24cp, STM90848 Civil and Environmental Engineering specialist stream 24cp, STM90849 Mechanical and Mechatronic Engineering specialist stream 24cp, STM91414 Electrical and Electronic Engineering specialist stream 24cp, STM90106. And then undertake the following: Core subjects 48cp, STM90993 Professional Engineering Practice Program subjects 48cp, CBK90173 Major choice (Engineering) 120cp. Thus leaving you with a total of 240 credit points. Course program - The programs below show a suggested sequence of subjects for each major for a full-time student commencing the course in Autumn session. They are intended as a guide only and do not take into account such factors as recognition of prior learning, changes in attendance mode and subject availability, or satisfactory academic progress. Students should consult the Timetable Planner to confirm the availability of subjects in the current academic year. The following is a list of majors: MAJ03472 Biomedical Engineering, MAJ03472 Biomedical Engineering MAJ03001 Civil Engineering, MAJ03002 Civil and Environmental Engineering, MAJ03518 Data Science Engineering, MAJ03005 Electrical Engineering, MAJ03007 Mechanical Engineering, MAJ03012 Mechanical and Mechatronic Engineering, MAJ03504 Mechatronic Engineering, MAJ03523 Software Engineering, MAJ03540 Flexible Engineering, MAJ03524 Electronic Engineering, MAJ03537 Electrical and Electronic Engineering, MAJ03549 Renewable Energy Engineering, MAJ03544 Chemical Process Engineering"
https://www.handbook.uts.edu.au/eng/area/ug.html,"Capstone Project - In the final sessions of the degree, each student undertakes a Capstone Project, supervised by a member of academic staff and designed to consolidate and integrate learning in all aspects of the program. Industry-linked projects, under joint supervision, are strongly encouraged. The project topic must be approved by an academic supervisor and must be relevant to the field of practice concerned. It may be largely technical in emphasis or it may encompass a range of technical and contextual challenges. The Capstone Project results in a substantial report which must be written and produced to professional engineering standards and must demonstrate the student's readiness for professional engineering practice."
https://www.handbook.uts.edu.au/eng/area/ug.html,"Recognition of prior learning - Students with relevant prior formal learning completed as part of a qualification (such as other university study or TAFE qualifications) in which study ceased no more than 10 years prior to the student's first semester of study may be entitled to recognition of prior learning in the form of subject exemptions. The level of recognition of prior learning depends on the relevance of the area of study to the proposed major in the BE(Hons) DipProfEngPrac. For a TAFE diploma in the same area, students can expect to receive between 24 and 36 credit points of exemptions, depending on the grades obtained in the TAFE subjects. Exemption from part of the Engineering Practice Program is granted only on the basis of actual work experience completed before commencing the course that can be shown to meet the required standards. The maximum exemption given is for one work-experience session. Without exception, all students in the engineering practice program must complete all components associated with the second internship. The faculty reserves the right to advise any student who is admitted with recognition of prior learning, and who is not succeeding in the program, to undertake some or all of the subjects from which exemption had been granted."
https://www.handbook.uts.edu.au/eng/area/ug.html,"Majors - Majors are currently offered in the following engineering sub-disciplines: biomedical (not available in the BEngSc and combined degrees with medical science and science), civil (with specialisations in construction and structures), civil and environmental (not available in the BEngSc and combined degrees), data, electrical, electrical and electronic (not available in the BEngSc and combined degrees), electronic, flexible (no specified major), mechanical, mechanical and mechatronic (not available in the BEngSc and combined degrees), mechatronic, software. The name of the major completed appears on the student's academic transcript and testamur."
https://handbook.uts.edu.au/directory/maj03523.html,"MAJ03523 Software Engineering - Software engineers focus on large, complex, and critical software systems that are ubiquitously connected to our daily lives. In this major, you will learn about the design, analysis, and management of software to ensure safe, reliable, secure, and maintainable systems. It goes beyond programming. You will develop skills to identify issues with existing systems and create new possibilities with the application of software design. Career opportunities from software engineering can be found in almost every large organisation across industry sectors including medical, transport, aviation, defence, telecommunications, banking and finance, tertiary research and development. The recommended course structure for software engineering commencing in 2024 is the following: Year 1 - Autumn session -, 33130 Mathematics 1 6cp, 48230 Introduction to Engineering Projects 6cp, 31269 Business Requirements Modelling 6cp, 41039 Programming 1 6cp. Spring session - 33230 Mathematics 2 6cp, 48024 Programming 2 6cp, 31282 Systems Testing and Quality Management 6cp, 31271 Database Fundamentals 6cp. Year 2 - Autumn session - 41035 Professional Practice Preparation 1 3cp, 68037 Physical Modelling 6cp, 31251 Data Structures and Algorithms 6cp, 31257 Information System Development Methodologies 6cp, Select 6 credit points from the following: SMJ10157 Information Security 24cp, SMJ10088 Network Systems Software 24cp, SMJ03067 Real-time Systems (Software Engineering) 24cp, CBK91234 Technical subject choice (Software Engineering) 24cp, SMJ02066 Computer Graphics and Animation 24cp, SMJ02065 Data Analytics 24cp, SMJ02067 Interaction Design 24cp, Spring session, 41036 Professional Experience 1 6cp, 41037 Work Integrated Learning 1 12cp, Year 3 - Autumn session - 41200 Engineering Project Appraisal 6cp, Select 6 credit points from the following: SMJ10157 Information Security 24cp, SMJ10088 Network Systems Software 24cp, SMJ03067 Real-time Systems (Software Engineering) 24cp, CBK91234 Technical subject choice (Software Engineering) 24cp, SMJ02066 Computer Graphics and Animation 24cp, SMJ02065 Data Analytics 24cp, SMJ02067 Interaction Design 24cp, 41113 Software Development Studio 6cp, 41038 Professional Practice Review 1 3cp, Select 6 credit points of electives. Spring session - 41201 Designing Sustainable Engineering Projects 6cp, 41128 Software Analysis Studio 12cp, 48433 Software Architecture 6cp, Year 4 - Autumn session - 41045 Professional Practice Preparation 2 3cp, 41202 Professional Engineering Communication 6cp, Select 6 credit points from the following: SMJ10157 Information Security 24cp, SMJ10088 Network Systems Software 24cp, SMJ03067 Real-time Systems (Software Engineering)24cp, CBK91234 Technical subject choice (Software Engineering) 24cp, SMJ02066 Computer Graphics and Animation 24cp,SMJ02065 Data Analytics 24cp, SMJ02067 Interaction Design 24cp, Select 12 credit points of electives. Spring session - 41046 Professional Experience 2 6cp, 41047 Work Integrated Learning 2 12cp, Year 5 - Autumn session - 41029 Engineering Research Preparation 6cp, Select 6 credit points from the following: SMJ10157 Information Security 24cp, SMJ10088 Network Systems Software 24cp, SMJ03067 Real-time Systems (Software Engineering) 24cp, CBK91234 Technical subject choice (Software Engineering) 24cp, SMJ02066 Computer Graphics and Animation 24cp, SMJ02065 Data Analytics 24cp, SMJ02067 Interaction Design 24cp, 41048 Professional Practice Review 2 3cp, Select 6 credit points of options, 41203 Collaboration in Complex Projects 6cp, Spring session, 41030 Engineering Capstone 6cp, 41129 Software Innovation Studio 12cp, 41127 Software Design Studio 6cp."
https://handbook.uts.edu.au/subjects/33130.html,"33130 Mathematics 1 - UTS: Science: Mathematical and Physical Sciences Credit points: 6 cp Result type: Grade and marks Anti-requisite(s): 33190 Mathematical Modelling for Science AND 35101 Introduction to Linear Dynamical Systems AND 37131 Introduction to Linear Dynamical Systems AND Spks Between C10154 and C10158 Recommended studies: Extension 1 Mathematics Description This subject develops the knowledge and skills necessary for problem-solving and mathematical modelling at an introductory level. Differential calculus is applied to model situations in science and engineering that involve oscillations. Integral calculus is used to solve selected problems involving first- and second-order differential equations, and to calculate areas, volumes, lengths and other physical quantities. Vectors, matrix multiplication and determinants are introduced and applied to problem-solving and modelling. Sequences and series are reviewed and power series introduced where power series are used to approximate more functions. Subject learning objectives (SLOs) Upon successful completion of this subject students should be able to: 1.Describe the relevance of mathematics to engineering and science and the role which engineering and science play in the development and evolution of mathematical ideas and methods 2.Apply mathematical tools and resources to model real world problems, especially in engineering and science 3.Demonstrate correct use of mathematical terminology and concepts, and show understanding of those concepts by describing them in both formal and informal language. 4.Achieve a high level of skill in the mathematical techniques covered in the subject content 5.Communicate mathematical knowledge clearly, logically and critically. 6.Use appropriate mathematical software to perform calculations and explore mathematical ideas relevant to the subject content, and demonstrate knowledge of the functions of this software by interpreting output. Course intended learning outcomes (CILOs) This subject also contributes specifically to the development of following course intended learning outcomes: Technically Proficient: FEIT graduates apply abstraction, mathematics and discipline fundamentals, software, tools and techniques to evaluate, implement and operate systems. (D.1) Collaborative and Communicative: FEIT graduates work as an effective member or leader of diverse teams, communicating effectively and operating within cross-disciplinary and cross-cultural contexts in the workplace. (E.1) Contribution to the development of graduate attributes Engineers Australia Stage 1 Competencies This subject contributes to the development of the following Engineers Australia Stage 1 Competencies: 1.2 Conceptual understanding of the mathematics, numerical analysis, statistics, and computer and information sciences which underpin the engineering discipline. 3.2. Effective oral and written communication in professional and lay domains. This subject is fundamental for Mathematics and Science students as it introduces them and contributes to the development of the most important characteristics of the modern scientist. It enables them to understand and apply fundamental mathematical principals to scientific theories and methodologies, to use problem-solving techniques, and to approach scientific challenges systematically. Furthermore, it helps them ensure that their work aligns with professional standards and ethical guidelines, and enables them to efficiently communicate scientific findings. This subject contributes to the development of the following graduate attributes: Graduate Attribute 1 - Disciplinary knowledge A broad introduction to the most important and widely used concepts in mathematics is given. Graduate Attribute 2 - Research, inquiry and critical thinking Throughout the subject mathematics is presented as a tool, which students are invited to use in the solution to real-world problems Graduate Attribute 3 - Professional, ethical and social responsibility Throughout the subject mathematics is presented as a tool, which students are invited to use in the solution to real-world problems Graduate Attribute 5 - Communication Students will use formal and informal language to communicate knowledge clearly, logically and critically. Teaching and learning strategies Lectures: Students are expected to review the pre-recorded lecture material (of about 2-3 hours per week). Blank slides of the lecture sheets will be made available, and students are encouraged to make their own notes. Tutorials: Tutorials will be held weekly on campus, with a duration of 2 hours. Skills Development Tests will be held in the tutorial, with feedback given the following week. For students who cannot attend face-toface tutorials, they may apply to attend the online tutorial, with priority given to overseas attendees. In the tutorials, students may be required to work in groups, as discussion of mathematical ideas helps students to learn. Students will be working through problems with the assistance of the tutor, who may also demonstrate mathematical modelling techniques and mathematical programming which the students can then investigate themselves. Students will get more value from the tutorials if they have attempted all tutorial problems before attending the tutorials. Lectures may be supplemented by a live, on campus workshop to answer student questions. Content (topics) Vectors and their application to physical problems. Functions and their relationship to measurement and the interpretation of physical results. Trigonometric functions and inverse trigonometric functions. Inverse functions. Hyperbolic functions. Differentiation. Integrals and methods of integration. Complex numbers. Differential equations arising from physical problems. Oscillatory motion. Matrix multiplication and determinants. Sequences and series, power series including Taylor series. Assessment Assessment task 1: Skills Development Tests Intent: These short tests (10 in total, of equal weighting) will provide regular feedback on how students are mastering the necessary skills in each area of the subject. They will be held in the tutorial classes according to the schedule. Objective(s): This assessment task addresses subject learning objective(s): 2, 4 and 5 This assessment task contributes to the development of course intended learning outcome(s): D.1 and E.1 Type:Quiz/test Groupwork:Individual Weight:60% Length: 30 minutes. Criteria: Students will be assessed and given feedback on: The ability to use key mathematical concepts in their appropriate context The ability to obtain the correct solution to problems Clear communication of how they arrived at the solution, including all steps Assessment task 2: Final Examination Intent: The final examination is a test of the core competency in mathematical skills developed throughout this subject. Objective(s): This assessment task addresses subject learning objective(s): 1, 2, 3, 5 and 6 This assessment task contributes to the development of course intended learning outcome(s): D.1 and E.1 Type:Examination Groupwork:Individual Weight:40% Length: Allow 2 Hours to complete the exam. Additional time will be allocated to download questions and upload solutions. Criteria: Students will be assessed on: Correct choice and use of problem solving strategies Ability to generate correct quantitative solutions to unseen problems Clear communication of how they arrived at the solution Minimum requirements Students must achieve 50% in the final examination in order to pass the subject. A student who receives less than 50% for the examination, yet manages to achieve 50% or greater overall, will be awarded an X grade. Required texts There is no required text for this subject - all information can be found in the lecture notes, recordings, and online notes as well as the solutions to the Tutorial problems. "
https://handbook.uts.edu.au/subjects/details/31271.html,"31271 Database Fundamentals - UTS: Information Technology: Computer Science Credit points: 6 cp Subject level: Undergraduate Result type: Grade and marks Requisite(s): 48023 Programming Fundamentals OR 37171 Introduction to Programming OR 48430 Fundamentals of C Programming OR 41039 Programming 1 Anti-requisite(s): 31061 Database Principles AND 31474 Database Fundamentals AND 31487 Database Management Systems AND 32606 Database Recommended studies: it is assumed that students are familiar with basic system analysis concepts and have basic software skills Description This subject introduces students to the fundamentals of effective database systems. Students are taught how data is structured and managed in an organisation in a way that can be used effectively by applications and users. They also learn to use the language SQL for effective data retrieval and modification. This subject teaches students to appreciate the significance and challenges of good database design and management, which underpin the development of functional software applications. Subject learning objectives (SLOs) Upon successful completion of this subject students should be able to: 1.Explain the main issues related to the design and use of structured data. 2.Construct conceptual and logical data models applying database design principles. 3.Evaluate data redundancy levels and their impact on database integrity and maintainability. 4.Construct conceptual data models applying data modelling principles. 5.Construct logical data models adhering to data normalisation principles. 6.Distinguish between good and bad database design. 7.Construct efficient SQL queries to retrieve and manipulate data as required. Course intended learning outcomes (CILOs) This subject also contributes specifically to the development of the following Course Intended Learning Outcomes (CILOs): Design Oriented: FEIT graduates apply problem solving, design and decision-making methodologies to develop components, systems and processes to meet specified requirements. (C.1) Technically Proficient: FEIT graduates apply abstraction, mathematics and discipline fundamentals, software, tools and techniques to evaluate, implement and operate systems. (D.1) Contribution to the development of graduate attributes Engineers Australia Stage 1 Competencies This subject contributes to the development of the following Engineers Australia Stage 1 Competencies: 1.1. Comprehensive, theory based understanding of the underpinning natural and physical sciences and the engineering fundamentals applicable to the engineering discipline. 2.2. Fluent application of engineering techniques, tools and resources. 2.3. Application of systematic engineering synthesis and design processes. Teaching and learning strategies Lectures and tutorial sessions totalling 3 hours per week, plus some optional, drop-in laboratory sessions during the session. Related materials (lecture notes, tutorial questions, etc.) will be provided on Canvas. Students can also benefit from the discussion board on Canvas where they can share their questions and engage in the inquiry before attending the classes. They need to be prepared for their weekly quiz. In tutorials, students will be involved in discussions about provided tasks to analyze the problem from different perspectives. Students have the opportunity to share their ideas and skills with their teammates under the supervision of their tutor. Suggested solutions will be presented by each team and discussed/evaluated during the tutorial. During the session, students will receive feedback on their progress and performance through weekly quizzes, tutorial discussions and reviewed assignments. Content (topics) The Role of Databases in Information Systems The Relational Data Model Conceptual database design (ER modeling) Logical design: ER conversion to a relational model Normalisation SQL: simple queries, aggregate functions, data modification statements, simple joins, complex joins, subqueries and set operators Assessment Assessment task 1: Weekly Quiz Intent: To assess the individual student's understanding of four or five specified concepts covered in the lecture and tutorial topics. Two or three questions of the quiz are extracted from the class activities (lecture and tutorial) of the week. Objective(s): This assessment task addresses the following subject learning objectives (SLOs): 1, 2, 3, 4, 5, 6 and 7 This assessment task contributes to the development of the following Course Intended Learning Outcomes (CILOs): C.1 and D.1 Type:Quiz/test Groupwork:Individual Weight:30% Assessment task 2: Data Modeling and Database Design Assignment Intent: The assignment assesses the student's ability to analyse and interpret data requirements, and to create conceptual and logical designs for a suitable database by applying the principles of data modeling and data normalisation. Objective(s): This assessment task addresses the following subject learning objectives (SLOs): 1, 2, 3, 4, 5 and 6 This assessment task contributes to the development of the following Course Intended Learning Outcomes (CILOs): C.1 and D.1 Type:Design/drawing/plan/sketch Groupwork:Group, group assessed Weight:30% Assessment task 3: Online SQL Test Intent:The online test assesses the student's practical ability to construct appropriate SQL statements to retrieve particular information from the database. Objective(s): This assessment task addresses the following subject learning objectives (SLOs): 7 This assessment task contributes to the development of the following Course Intended Learning Outcomes (CILOs): D.1 Type:Quiz/test Groupwork:Individual Weight:40% Minimum requirements To order to pass the subject, a student must achieve an overall mark of 50% or more. Required texts The required referent for the subject is: Modern Database Management, 11th or 12th Edition, by Hoffer, J.A, Ramesh, V., and Topi, H., ISBN-10: 0273779281 or ISBN-13: 9780273779285, published by Pearson Education. To reduce the cost of the prescribed textbook, students can purchase the electronic version of the book or a custom book that is compiled by Dr Julia Prior and includes only the chapters that are used in the subject (i.e. chapters 1-4, 6 and the first part of 7 from the original book). The tenth edition of the book is also acceptable, although the relevant page numbers may be different. It is expected that every student has their own copy of the prescribed textbook which is the primary resource for the subject. The content of the subject is based heavily on the contents of this textbook. Please see the Textbook module on the LMS (Learning Management System) for more information and the book links. Recommended texts Mannino, Michael V (University of Colorado, Denver).: Database Design, Application, Development & Administration, 2nd, 3rd (McGraw-Hill publishers) and 4th editions are all acceptable; the relevant material in all of these editions is essentially the same in content, it is mostly chapter and page numbers that may be different. There are several copies of the 4th edition available in 7-day loans section, open reserve and on the open shelves, as well as a number of copies of the 2nd edition in 7-day loans, closed reserve and on the open shelves, in the university's City campus library in Haymarket. Date, C.J.: An introduction to Database Systems, Eighth Edition, Pearson Addison Wesley, 2003, ISBN: 0321197844 (there are several copies of this in the City campus library, and other books by the same author). Whilst this book is quite technical, this is the seminal text for relational database management systems. Simsion, Graeme C. : Data Modeling Essentials, Morgan Kaufmann Publishers, Amsterdam, 2005, ISBN: 0126445516 (there is also a later edition, but this is not in the uni library). Pratt, Philip J. : A Guide to SQL, Seventh Edition, Thomson Course Technology, 2005, ISBN 0619216743 (earlier editions also fine). Connolly, Thomas M.: Database solutions : a step-by-step guide to building databases, Second Edition, Pearson Addison Wesley, 2003, ISBN 0321173503. Connolly, Thomas and Begg, Carolyn: Database Systems â€“ a practical approach to design, implementation, and management, Fifth Edition, AddisonWesley, 2010, ISBN 0321523067 (third and fourth editions also fine). These texts, and several others on relational database design, use and management, are all available in the university library. References Useful web references include: http://www.sqlcourse.com/ http://www.w3schools.com/sql/default.asp http://sqlzoo.net/ http://wiki.postgresql.org/ Additional references and reading material will be handed out, recommended during lectures or posted to the LMS (Learning Management System: Canvas and/or Ed) when necessary during the semester. Other resources Lecture Slides Please note that although electronic copies of all lecture slides are available for students, these are not to be regarded as adequate lecture notes, nor as the complete subject content. They are merely a guide to what students need to master in the subject, and for students to use as a basis for making their own notes during lectures. The Learning Management System (Canvas) is the web-based online learning and teaching environment used at UTS in a variety of ways to support, complement, and extend student learning activities. Subject announcements, links to subject learning materials, and other information will be posted on Canvas. You may use it for communicating with other course participants and staff, and you should also participate in the online discussion forums related to the subject on Ed. You should check the announcements on the LMS (Learning Management System) and Ed for this subject at least once a week, as all student notices for this subject will be given via this site. The subject coordinator will assume that every student is checking the LMS and Ed news page regularly for subject announcements, as well as the discussion forums and subject material."
https://handbook.uts.edu.au/subjects/details/31282.html,"31282 Systems Testing and Quality Management - UTS: Information Technology: Computer Science Credit points: 6 cp Subject level: Undergraduate Result type: Grade and marks Requisite(s): 31266 Introduction to Information Systems These requisites may not apply to students in certain courses. See access conditions. Description This subject provides students with the practical knowledge and skills that are necessary to effectively measure and control the quality of software products. It covers software quality assurance and management principles and practice together with systems and software testing approaches. Subject learning objectives (SLOs) Upon successful completion of this subject students should be able to: 1.Plan and execute specific processes, types and phases of testing to assure quality in software products 2. Apply exploratory and smoke testing to evaluate system operations and functions 3.Apply quality assurance and management principles to Agile and Waterfall test processes 4.Work collaboratively and actively to plan, develop, apply and document test systems 5.Understand the principles and major approaches to testing and quality management including the way testing processes support developers, projects and business outcomes 6.Understand how to communicate in a professional manner in all aspects of testing Course intended learning outcomes (CILOs) This subject also contributes specifically to the development of the following Course Intended Learning Outcomes (CILOs): Technically Proficient: FEIT graduates apply abstraction, mathematics and discipline fundamentals, software, tools and techniques to evaluate, implement and operate systems. (D.1) Collaborative and Communicative: FEIT graduates work as an effective member or leader of diverse teams, communicating effectively and operating within cross-disciplinary and cross-cultural contexts in the workplace. (E.1) Contribution to the development of graduate attributes Engineers Australia Stage 1 Competencies This subject contributes to the development of the following Engineers Australia Stage 1 Competencies: 1.3. In-depth understanding of specialist bodies of knowledge within the engineering discipline. 2.2. Fluent application of engineering techniques, tools and resources. 3.2. Effective oral and written communication in professional and lay domains. 3.6. Effective team membership and team leadership. Teaching and learning strategies 1.5 hour lecture and 1.5 hour tutorial per week UTS has embraced the â€˜flipped educationâ€™ model, rather than only attending lectures, students access digital resources and undertake preliminary tasks prior to coming to tutorial and lecture where they engage in collaborative, mentored activities. Learning in this subject includes viewing videos and recommended reading (both available from the UTS Library); each lecture contains details of preparation work for the following tutorial. Tutorial participation marks depend on the completion of the FLIP learning work as well as participation in tutorial. Content (topics) The major topics are: Quality Assurance Principles Definition of quality for software products, quality characteristics and their relationships, setting measurable and testable quality attributes, the relationship between the QA Function, Software Developers and Management. Implementing Software Quality Assurance SQA Plans: characteristics and documentation, quality standards, configuration management, quality audit, quality assurance justification, effectiveness and cost of SQA Verification, Validation and Test VV&T methods and techniques, VV&T tools, relation of VV&T to all phases of the software development life cycle, the processes of VV&T appropriate to each of the life cycle phases Quality Management practice How Quality impacts the business and its customers. The required infrastructure including testing tools, environments. The people and skills needed for good quality and the interaction of the test team and their work on other IT groups. Assessment Assessment task 1: FMEA & Static testing Objective(s): This assessment task addresses the following subject learning objectives (SLOs): 1 and 6 This assessment task contributes to the development of the following Course Intended Learning Outcomes (CILOs): D.1 and E.1 Type:Report Groupwork:Individual Weight:20% Assessment task 2: Exploratory Test Objective(s): This assessment task addresses the following subject learning objectives (SLOs): 1, 2, 3 and 6 This assessment task contributes to the development of the following Course Intended Learning Outcomes (CILOs): D.1 and E.1 Type:Report Groupwork:Individual Weight:25% Assessment task 3: System Test Objective(s): This assessment task addresses the following subject learning objectives (SLOs): 1, 2, 3, 4 and 6 This assessment task contributes to the development of the following Course Intended Learning Outcomes (CILOs): D.1 and E.1 Type:Report Groupwork:Group, group and individually assessed Weight:35% Assessment task 4: Multiple choice quiz Objective(s): This assessment task addresses the following subject learning objectives (SLOs): 4, 5 and 6 This assessment task contributes to the development of the following Course Intended Learning Outcomes (CILOs): D.1 and E.1 Type:Quiz/test Groupwork:Individual Weight:20% Minimum requirements In order to pass the subject, a student must achieve an overall mark of 50% or more. Required texts Black, R. 2009, Managing the Testing Process: Practical Tools and Techniques for Managing Hardware and Software Testing. Third Edition, Wiley Publishing Inc. ISBN: 978-0-470-40415-7 Morgan, P, and Hambling, B, 2019, Software Testing : An ISTQB-BCS Certified Tester Foundation Guide. Fourth Edition. References Perry, W. E. 2006, Effective Methods for Software Testing, Third Edition, Wiley Publishing Inc. Laird, L. M and Brennan, M. C. 2006, Software Measurement and Estimation: A Practical Approach (Quantitative Software Engineering Series), First Edition, John Wiley Inc. Godbole, N. S. 2004, Software Quality Assurance: Principles And Practice, First Edition, Alpha Science International Ltd. Beydeda, S. and Gruhn, V. 2005, Testing Commercial-off-the-Shelf Components and Systems, Springer-Verlag. Chrissis, M., Konrad. M. and Shrum, S. 2003, CMMI Guidelines for Process Integration and Product Improvement, Addison Wesley. Potter, N. and Sakry, M. 2002, Making Process Improvement Work, Addison Wesley Wieger, K. E. 2002, Peer Reviews in Software, Addison Wesley. Ahern, D., Clouse, A. and Turner, R. 2001, CMMI Distilled: A Practical Introduction to Integrated Process Improvement, Second Edition, Addison Wesley."
https://handbook.uts.edu.au/subjects/details/48024.html,"48024 Programming 2 - UTS: 48024 Programming 2 - UTS: Engineering: Computer Science Credit points: 6 cp Subject level: Undergraduate Result type: Grade and marks Requisite(s): 48023 Programming Fundamentals OR 31267 Programming Fundamentals OR 31465 Object-oriented Programming OR 48430 Fundamentals of C Programming OR 41039 Programming 1 Anti-requisite(s): 31244 Applications Programming AND 31469 Object-oriented Design Recommended studies: basic skills in Java and Python programming; 41039 Programming 1 is the recommended requisite for students who intend on taking 48024 Programming 2 Description This subject teaches students how to design, develop and evaluate software systems to meet predefined quality characteristics of functionality (suitability) and usability (understandability, learnability, operability, compliance). Software solutions are implemented using Java or Python. Concepts, theories and technologies underlying the methods and techniques are introduced and explained as required. Students apply all that they have learned to develop and implement the architecture of a business system. Subject learning objectives (SLOs) Upon successful completion of this subject students should be able to: 1. Evaluate if a solution is well-designed and fit for purpose 2. Design a well-constructed OO solution from a specification. 3. Demonstrate a working knowledge of lists. 4. Use inheritance to improve the system design. 5. Construct a GUI interface from a specification. Course intended learning outcomes (CILOs) This subject also contributes specifically to the development of the following Course Intended Learning Outcomes (CILOs): Design Oriented: FEIT graduates apply problem solving, design and decision-making methodologies to develop components, systems and processes to meet specified requirements. (C.1) Technically Proficient: FEIT graduates apply abstraction, mathematics and discipline fundamentals, software, tools and techniques to evaluate, implement and operate systems. (D.1) Contribution to the development of graduate attributes Engineers Australia Stage 1 Competencies This subject contributes to the development of the following Engineers Australia Stage 1 Competencies: 1.2. Conceptual understanding of the mathematics, numerical analysis, statistics, and computer and information sciences which underpin the engineering discipline. 2.1. Application of established engineering methods to complex engineering problem solving. 2.2. Fluent application of engineering techniques, tools and resources. 2.3. Application of systematic engineering synthesis and design processes. Teaching and learning strategies The subject has one contact hour in Week 1 and three contact hours per week in the remaining weeks. A weekly online study module presents new material in the form of videos and written articles and shows working examples of code. Each study module on average is expected to take 1 hour to complete and needs to be completed before coming to the lecture and the lab. Note that access to the lab material is electronically blocked until the student has completed the required weekly study module. Regular lectures include interactive quizzes and reflections on the key topics and techniques. A weekly two-hour lab session gives students practice working in groups to analyse software specifications and construct software plans, and practice working individually to write, debug and run code. Content (topics) Basic programming plans Design rules and notations Debugging Strings Classes Linked lists Inheritance How to build a GUI The event model GUI Lists and list models GUI tables and table models Assessment Assessment task 1: Labs Intent: The labs, both assessed and non-assessed, provide practice in programming. Objective(s): This assessment task addresses the following subject learning objectives (SLOs): 1, 2 and 3 This assessment task contributes to the development of the following Course Intended Learning Outcomes (CILOs): C.1 and D.1 Type:Laboratory/practical Groupwork: Individual Weight: 14% Length: Each weekly lab on average should take about 2 hours for the typical student. Criteria: The text-based labs are marked by system, and the GUI labs are marked by a combination of system, and the tutor. The minimum essential requirement for a pass in text-based lab is to pass all the test cases. Assessment task 2: Programming assignment 1 Intent: This programming assignment provides practice and tests for the topics of system design and lists. Objective(s): This assessment task addresses the following subject learning objectives (SLOs): 1, 2 and 3 This assessment task contributes to the development of the following Course Intended Learning Outcomes (CILOs): C.1 and D.1 Type:Project Groupwork: Individual Weight: 35% Criteria: The assignment is marked on correctness by system instantly, based on the match to the model solutionâ€™s IO trace. Design rules and spoofy check will be manually performed after due. The minimum essential requirement for a pass in this assessment is to complete the tasks worth half the mark. Assessment task 3: Programming assignment 2 Intent: This programming assignment provides practice and tests for the topics of system design, GUIs and MVC. Objective(s): This assessment task addresses the following subject learning objectives (SLOs): 1, 2, 3, 4 and 5 This assessment task contributes to the development of the following Course Intended Learning Outcomes (CILOs): C.1 and D.1 Type: Project Groupwork: Individual Weight: 25% Criteria: The assignment is marked on correctness and design principles, which are marked by a combination of automated system marking, demonstration and the tutor. The minimum essential requirement for a pass is to complete tasks worth more than half the marks. Assessment task 4: Timed LMS exam Intent: Students are required to complete an LMS exam within a time frame to consolidate the factual knowledge taught in the subject. Objective(s): This assessment task addresses the following subject learning objectives (SLOs): 1, 2, 3, 4 and 5 This assessment task contributes to the development of the following Course Intended Learning Outcomes (CILOs): C.1 and D.1 Type:Quiz/test Groupwork: Individual Weight: 20% Length: 30 minutes Criteria: The questions are marked for correctness only. Feedback and reflection in lectures and labs will be relevant to enhance student performance in the exam. Assessment task 5: Advanced Challenges Intent: The advanced challenges provide practice and tests for programming proficiency. Objective(s): This assessment task addresses the following subject learning objectives (SLOs): 1, 2, 3 and 4 This assessment task contributes to the development of the following Course Intended Learning Outcomes (CILOs): C.1 and D.1 Type: Quiz/test Groupwork: Individual Weight: 6% Length: 30-200 lines of code Criteria: The questions are marked for correctness only. Minimum requirements In order to pass the subject, a student must achieve an overall mark of 50% or more. References You should study the weekly module videos and sample programs posted to Canvas and ED. Other resources All subject material is posted in Canvas and ED system. The following websites may be useful: https://docs.oracle.com/javase/8/docs/ https://docs.oracle.com/javase/tutorial/ http://docs.oracle.com/javase/8/javafx/user-interface-tutorial/ui_controls.htm http://www.oracle.com/technetwork/java/javase/downloads/jdk8-downloads-2133151.html https://netbeans.org/downloads/ https://perso.ensta-paris.fr/~diam/java/online/notes-java/index.html U:PASS UTS Peer Assisted Study Success is a voluntary study session where you will be studying the subject with other students in a group. It is led by a student who has previously achieved a distinction or high distinction in the subject area, and who has a good WAM. Leaders will prepare activities for you to work on in groups based on the content you are learning in lectures and tutorials. Itâ€™s really relaxed, friendly, and informal. Because the leader is a student just like you, they understand what itâ€™s like to study the subject and how to do well, and they can pass those tips along to you. Students also say itâ€™s a great way to meet new people and a guaranteed study hour. You can sign up for U:PASS sessions via U:PASS website https://www.uts.edu.au/current-students/support/upass/upass/sessions/register-sessions. Note that sign up is not open until week 2, as itâ€™s voluntary and only students who want to go should sign up. If you have any questions or concerns about U:PASS, please contact Georgina at upass@uts.edu.au, or check out the website."
https://handbook.uts.edu.au/subjects/details/33230.html,"33230 Mathematics 2 - UTS: Science: Mathematical and Physical Sciences Credit points: 6 cp Result type: Grade and marks Requisite(s): 33130 Mathematics 1 OR 33190 Mathematical Modelling for Science OR 37131 Introduction to Linear Dynamical Systems Anti-requisite(s): 33290 Statistics and Mathematics for Science AND 35101 Introduction to Linear Dynamical Systems AND 35102 Introduction to Analysis and Multivariable Calculus AND 35151 Introduction to Statistics AND 37132 Introduction to Mathematical Analysis and Modelling AND Spks Between C10154 and C10158 Description This subject consists of two parts: multivariate calculus and an introduction to statistics. The mathematical part develops the mathematical skills required for mathematical modelling of systems involving more than one independent variable. The statistics part is an introduction to descriptive statistics, statistical inference and simple linear regression. Topics include linear algebra, solutions to sets of equations resulting from particular problems, eigenvectors and eigenvalues, partial derivatives, optimisation, multiple integrals and their applications, and probability with a focus on the determination of the reliability of a system of components in various engineering contexts. Subject learning objectives (SLOs) Upon successful completion of this subject students should be able to: 1.model real world problems in engineering practice using mathematical and statistical tools and resources 2.use formal mathematical and statistical terminology and also informal (lay) language to express the concepts presented in the subject 3.demonstrate a high level of skill in the mathematical and statistical techniques covered in the subject by both formulating and solving problems in engineering and science 4.demonstrate understanding of the theoretical results which justify the use of these techniques 5.communicate mathematical and statistical knowledge clearly, logically and critically 6.use appropriate mathematical and statistical software packages to perform calculations and explore ideas relevant to the subject content 7.apply the subject matter covered in lectures, computer labs, tutorials and assignments to previously unseen problems and proofs, especially in engineering and science. Course intended learning outcomes (CILOs) This subject also contributes specifically to the development of following course intended learning outcomes: Technically Proficient: FEIT graduates apply abstraction, mathematics and discipline fundamentals, software, tools and techniques to evaluate, implement and operate systems. (D.1) Collaborative and Communicative: FEIT graduates work as an effective member or leader of diverse teams, communicating effectively and operating within cross-disciplinary and cross-cultural contexts in the workplace. (E.1) Contribution to the development of graduate attributes Engineers Australia Stage 1 Competencies This subject contributes to the development of the following Engineers Australia Stage 1 Competencies: 1.2 Conceptual understanding of the mathematics, numerical analysis, statistics, and computer and information sciences which underpin the engineering discipline. 3.2. Effective oral and written communication in professional and lay domains. Faculty of Science Graduate Attributes: Graduate Attribute 1 - Disciplinary knowledge An understanding of the nature, practice & application of the chosen science discipline, Graduate Attribute 2 - Research, inquiry and critical thinking An understanding of the scientific method of knowledge acquisition. Encompasses problem solving, critical thinking and analysis attributes, and the ability to discover new understandings. Graduate Attribute 3 - Professional, ethical and social responsibility The ability to acquire, develop, employ and integrate a range of technical, practical and professional skills, in appropriate and ethical ways within a professional context, autonomously and collaboratively and across a range of disciplinary and professional areas. Time management skills, personal organisation skills, teamwork skills, computing skills, laboratory skills, data handling, quantitative and graphical literacy skills. Graduate Attribute 5 - Communication An understanding of the different forms of communication - writing, reading, speaking, listening - including visual and graphical, within science and beyond and the ability to apply these appropriately and effectively for different audiences. Teaching and learning strategies Lectures: Two 90 minute lectures per week Lecture materials including detailed notes are provided in Canvas for students to read before the class. Concepts and definitions are explored through the use of both pure and applied examples. Students have the opportunity to make notes and question concepts. Tutorials: One one-hour tutorial per week Students are required to attempt problems posted in Canvas before they come to the tutorial. These problems develop the concepts delivered in the previous lecture. In class students can ask questions about areas they don't understand with either their peers or their tutors. Computer labs: Three one-hour computer labs and eight mastery test sessions (four tests with a second chance sitting) Students work in the computer labs individually and in pairs. There is a problem sheet made available in Canvas which students use to prepare before they come to the lab. During the class students interact with the tutors and other students to complete the problems. The three labs make use of a program called minitab. This practice allows students the opportunity to get feedback in preparation for the Mastery Tests. The Mastery Tests are interspersed between the computer labs. The material covered in the computer lab relates to the subsequent Mastery tests. After each test submission students get immediate feedback on correct or incorrect responses. The maths study centre is then available as a support mechanism for students to get feedback on incorrect responses and work through correct solutions. The subject coordinator will offer further feedback as a third step. Webassign is the program used for practice tests. These can be accessed online by students at any time during the semester and students receive immediate feedback after each question is submitted. These questions cover all of the subject materials. Forms of attendance in this subject online flexible. There will be subject announcements indicating opportunities to attend campus, alternatively all activities can be completed online. Content (topics) Topics include: linear algebra including eigenvalues and eigenvectors and applications; 3D geometry and functions of several variables; partial derivatives; optimisation; multiple integrals and their applications; probability with a focus on the determination of the reliability of a system of components in various engineering contexts; descriptive statistics, probability distributions, statistical inference, introduction to linear regression. Minitab is used in the statistics part of the subject. Other software will be used as appropriate. Assessment Assessment task 1: Mastery Test 1 Intent: To reaffirm required knowledge for success in 33230, and to become acquainted with the mastery process. This assessment task contributes to the development of the following science graduate attributes: 1. disciplinary knowledge Mastery Tests targets Problem posing and solving â€“ ability to identify, assess and formulate problems relevant to oneâ€™s academic discipline and apply appropriate approaches and methods of problem solving. Objective(s): This assessment task addresses subject learning objective(s): 2 This assessment task contributes to the development of course intended learning outcome(s): D.1 Groupwork:Individual Weight:5% Length: 50 min Criteria: Correct interpretation of terminology, Correct choice of problem solving strategies and procedures. Correct choice of reasoning. Assessment task 2: Mastery Test 2 Intent: To provide feedback on basic skills and concepts in the material covered in weeks 1-3 of the statistics strand and weeks 1-2 of the mathematics strand. This assessment task contributes to the development of the following science graduate attributes: 1. disciplinary knowledge Objective(s): This assessment task addresses subject learning objective(s): 2, 3, 6 and 7 This assessment task contributes to the development of course intended learning outcome(s): D.1 Groupwork:Individual Weight:15% Length: 50 min Criteria: Correct use of terminology Correct choice and use of problem solving strategies and procedures Accurate mathematical reasoning Assessment task 3: Mastery Test 3 Intent: To provide feedback on basic skills and concepts in the material covered in weeks 4-6 of the statistics strand and weeks 3-6 of the mathematics strand. This assessment task contributes to the development of the following science graduate attributes: 1. disciplinary knowledge Objective(s): This assessment task addresses subject learning objective(s): 2, 3, 6 and 7 This assessment task contributes to the development of course intended learning outcome(s): D.1 Groupwork:Individual Weight:15% Length: 50 min Criteria: Correct interpretation of terminology, Correct choice of problem solving strategies and procedures. Correct choice of reasoning. Assessment task 4: Mastery Test 4 Intent: To provide feedback on basic skills and concepts in the material covered in weeks 7-9 of the statistics strand and weeks 7-10 of the mathematics strand. This assessment task contributes to the development of the following science graduate attributes: 1. disciplinary knowledge Objective(s): This assessment task addresses subject learning objective(s): 2, 3, 6 and 7 This assessment task contributes to the development of course intended learning outcome(s): D.1 Groupwork:Individual Weight:15% Length: 50 min Criteria: Correct interpretation of terminology, Correct choice of problem solving strategies and procedures. Correct choice of reasoning. Assessment task 5: Final Exam Intent: To comprehensively assess more advanced material across the subject, including material taken from all of the lectures in both the statistics and mathematics strands. This assessment task contributes to the development of the following graduate attributes: 1. Disciplinary Knowledge 2. Research, inquiry and critical thinking 3. Professional, ethical and social responsibility 5. Communication Objective(s): This assessment task addresses subject learning objective(s): 1, 2, 3, 4, 5 and 7 This assessment task contributes to the development of course intended learning outcome(s): D.1 and E.1 Groupwork:Individual Weight:50% Length: 2 hours plus 10 minutes reading time Criteria: Correct use of terminology Correct choice and use of problem solving strategies and procedures Accurate Mathematical Reasoning Clarity of communication Minimum requirements Students must achieve 50% in the final examination in order to pass the subject. A student who receives less than 50% for the examination, yet manages to achieve 50% or greater overall, will be awarded an X grade. Recommended texts Devore, Jay (2014) Probability and Statistics for Engineering and the Sciences Ninth Edition Cengage. Stewart: Calculus, Concepts and Contexts, 4e (2010), Cengage. References Mathematics: McLelland, G. J. (1999) An Introduction to Matrices, Determinants and Linear Equations. Department of Mathematical Sciences, UTS. (available on UTS Online) Statistics: Montgomery, D. C., Runger, G. C. & Hubele, N. F. (2011) Engineering Statistics, 5th edition, Wiley. Other resources Students are encouraged to make use of the collection of online videos made available on Canvas, as well as practise quizzes and weekly homework exercises on Webassign. U:PASS (UTS Peer Assisted Study Success) is a voluntary  study session  where you will be studying the subject with other students in a group. It is led by a student who has previously achieved a distinction or high distinction in the subject area, and who has a good WAM. Leaders will prepare activities for you to work on in groups based on the content you are learning in lectures and tutorials. Itâ€™s really relaxed, friendly, and informal. Because the leader is a student just like you, they understand what itâ€™s like to study the subject and how to do well, and they can pass those tips along to you. Students also say itâ€™s a great way to meet new people and a  guaranteed study hour . You can sign up for U:PASS sessions via U:PASS website http://tinyurl.com/upass2017 Note that sign up is not open until week 2, as itâ€™s voluntary and only students who want to go should sign up. If you have any questions or concerns about U:PASS, please contact Georgina at upass@uts.edu.au, or check out the website."
https://handbook.uts.edu.au/subjects/details/41039.html,"41039 Programming 1 - UTS: Information Technology: Computer Science Credit points: 6 cp Subject level: Undergraduate Result type: Grade and marks Anti-requisite(s): 48023 Programming Fundamentals Description Programming computers is an essential skill for computer scientists, software engineers, software developers and data scientists, and successful programmers integrate many diverse capabilities to be able to solve complex, abstract problems. This subject introduces the core programming concepts using an object-oriented approach to programming, prioritising project-based learning and independent research, experimentation, and communication skills. Additionally, most programming in industry occurs as alterations to a portion of a large existing codebase, and this subject introduces students to how their initial programming explorations may eventually expand to making fixes or improvements to complex industry-scale projects. Subject learning objectives (SLOs) Upon successful completion of this subject students should be able to: 1.Apply basic programming concepts of state, iteration, and decision 2.Solve computational problems by using abstract modelling and conceptualisation 3.Design and create simple functioning programs to achieve objectives 4.Interpret, describe, and document programs using clear communication 5.Reflect on programming decisions and formulate alternatives Course intended learning outcomes (CILOs) This subject also contributes specifically to the development of the following Course Intended Learning Outcomes (CILOs): Design Oriented: FEIT graduates apply problem solving, design and decision-making methodologies to develop components, systems and processes to meet specified requirements. (C.1) Technically Proficient: FEIT graduates apply abstraction, mathematics and discipline fundamentals, software, tools and techniques to evaluate, implement and operate systems. (D.1) Collaborative and Communicative: FEIT graduates work as an effective member or leader of diverse teams, communicating effectively and operating within cross-disciplinary and cross-cultural contexts in the workplace. (E.1) Contribution to the development of graduate attributes Engineers Australia Stage 1 Competencies This subject contributes to the development of the following Engineers Australia Stage 1 Competencies: 1.1. Comprehensive, theory based understanding of the underpinning natural and physical sciences and the engineering fundamentals applicable to the engineering discipline. 1.2. Conceptual understanding of the mathematics, numerical analysis, statistics, and computer and information sciences which underpin the engineering discipline. 2.1. Application of established engineering methods to complex engineering problem solving. 2.2. Fluent application of engineering techniques, tools and resources. 2.3. Application of systematic engineering synthesis and design processes. 3.2. Effective oral and written communication in professional and lay domains. Teaching and learning strategies This subject will employ several parallel learning structures to allow students to find a mixture of learning experiences that suits their particular needs. The flipped lecture format allows the students to engage with the learning material in an asynchronous, self-paced, location-independent manner. It also supports a modular approach to delivering core content, permitting students to revise, engage and re-engage as suits their needs. Included in the learning material are staged practice exercises to help the students develop their knowledge and skills in a consequence- and stress-free environment. In the workshops, this learning will be reinforced with scaffolded exercises that weave the core material together and provide a practical experience of the subject matter. These exercises are then capped with a low-stakes assessment task to help the students gauge their progress and understanding of the material. Tying these two structural components together is the weekly drop-in sessions, that offer students a face-to-face expert contact point tailored to their current progress, addressing the exact difficulties they are facing at the time. The learning material also builds towards the larger, ongoing project, which ties the content together into a functioning whole. Content (topics) 1. Simplest Working Program, and Simple Output 2. Data Types and Variables 3. Decisions and Branching Program Flow 4. Arrays and User Input 5. Loops and Iterative Program Flow 6. Classes and Constructors 7. Methods, Properties and Access Control 8. Lists and Polymorphism 9. File Input and Output 10. Object Oriented Programming Techniques and Structures 11. Inheritance and Interfaces 12. Review and Preview of Programming 2 Assessment Assessment task 1: Lab Assessments Intent: This task provides a mixture of formative and summative assessment to allow students to gauge their progress towards the subject objectives in a low-stakes, controlled environment. Objective(s): This assessment task addresses the following subject learning objectives (SLOs): 1, 2, 3 and 5 This assessment task contributes to the development of the following Course Intended Learning Outcomes (CILOs): C.1 and D.1 Type:Exercises Groupwork:Individual Weight:30% Assessment task 2: Code Comprehension Intent: The ability to understand code at a higher level than simple line-by-line translation is a key skill in developing strong mental models supporting program design and development skills. Being able to read, comprehend and explain code is a fundamental step in developing deeper understanding. Objective(s): This assessment task addresses the following subject learning objectives (SLOs): 4 and 5 This assessment task contributes to the development of the following Course Intended Learning Outcomes (CILOs): C.1 and E.1 Type:Exercises Groupwork:Individual Weight:25% Length: 50-100 lines of code, commented. Assessment task 3: Project Intent: While understanding of the elements of a computer program is foundational, without comprehending how they function in a larger whole the core goal of programming is lost. This task combines the individual elements learnt throughout the subject into a single, functioning whole. Objective(s): This assessment task addresses the following subject learning objectives (SLOs): 1, 2, 3, 4 and 5 This assessment task contributes to the development of the following Course Intended Learning Outcomes (CILOs): C.1, D.1 and E.1 Type:Project Groupwork:Individual Weight:25% Length: Approximately 500 lines of code. Assessment task 4: Exam Intent: Programming well requires robust mental models of both the problem to be solved and the tools and approaches that can potentially be used to solve it. The exam is an opportunity for students to demonstrate understanding of key elements of programming skills independent of more complicated software development concerns. Objective(s): This assessment task addresses the following subject learning objectives (SLOs): 1, 2, 3, 4 and 5 This assessment task contributes to the development of the following Course Intended Learning Outcomes (CILOs): C.1, D.1 and E.1 Type:Examination Groupwork:Individual Weight:20% Length: 1 day Assessment task 5: Extension Intent: Knowledge and skill can be demonstrated in many ways. In programming subjects in particular, more sustained and free-form development than that allowed by normal assessment tasks can reveal a deeper understanding than otherwise apparent. This task offers the opportunity for students to demonstrate a higher degree of knowledge and skill through work on more difficult computational and programming problems that extend beyond the immediate material of the subject. Objective(s): This assessment task addresses the following subject learning objectives (SLOs): 1, 2, 3 and 5 This assessment task contributes to the development of the following Course Intended Learning Outcomes (CILOs): C.1 and D.1 Type:Project Groupwork:Individual Weight:Mandatory task that does not contribute to subject mark Minimum requirements To pass this subject, students must achieve an overall mark of 50% or greater. References Introductory Texts 1. H. Schildt,  Java: A Beginnerâ€™s Guide , 8th Ed., McGraw-Hill Education, 2018. 2. K. Sierra & B. Bates,  Head First Java , 2nd Ed., O'Reilly, 2005. (Only covers up to Java 5, but the differences won't matter for this subject) 3. Eric Matthes,  Python Crash Course , 2nd Ed., No Starch, 2019. 4. Al Swigert,  Automate the Boring Stuff with Python , 2nd Ed., No Starch, 2019. (This gets a bit away from learning to program, to just using Python as a tool without deep comprehension, but it's still useful and the cover matches the Matthes one). 5. Z. A. Shaw,  Learn Python 3 the Hard Way , 1st Ed., Addison Wesley, 2017. (There's an older version for Python 2.7 which is just as good, and a follow-on book as well. This is probably my pick of the three intro texts at the moment). 6. P. Barry,  Head First Python , 2nd Ed., O'Reilly, 2016. (Same series as  Head First Java , so if you like that, you'll probably like this.) More Advanced Texts 7. C. S. Horstmann,  Core Java, Volume I â€“ Fundamentals , 11th Ed., Prentice Hall, 2018. 8. J. Bloch,  Effective Java , 3rd Ed., Addison-Wesley Professional, 2018. (Advanced text.) 9. H. Schildt,  Java: The Complete Reference , 11th Ed., McGraw-Hill Education, 2019. 10. M. Lutz,  Learning Python , 5th Ed., O'Reilly, 2013. (Maybe getting a bit old now, but quite comprehensive, and part of a huge series of O'Reilly books on Python.)"
https://handbook.uts.edu.au/subjects/details/31269.html,"31269 Business Requirements Modelling - UTS: Information Technology: Computer Science Credit points: 6 cp Subject level: Undergraduate Result type: Grade and marks Requisite(s): 31266 Introduction to Information Systems OR 31060 Information Systems Principles OR 31472 Introduction to Collaborative Systems OR 31484 Information Systems Foundations OR 31414 Information Systems These requisites may not apply to students in certain courses. See access conditions. Anti-requisite(s): 31424 Systems Modelling AND 31475 Requirements Engineering AND 31485 Systems Development Description This subject introduces information system concepts and describes how these concepts can be used to model business requirements. It outlines how the ability to capture information about the system in ways understood by its eventual users improves the final quality of the system. An overview of agile and non-agile software engineering principles, methods, tools and techniques is presented and practised in small teams. The subject introduces various analysis approaches found in contemporary system development including object-oriented methods, agile methods, business process modelling and entity-relationship modelling. It explores the relationships between these techniques and their application, and how they are used to capture and model the business requirements. Students apply various requirements elicitation, analysis, modelling and specification techniques to case studies in small teams. Subject learning objectives (SLOs) Upon successful completion of this subject students should be able to: 1.Identify stakeholders, understand their needs, and learn what/how to capture requirements in the system development process. 2.Apply modelling and systems analysis techniques that help understand the working of a business system. 3.Document and specify various requirements via Software Requirements Specification (SRS). 4.Develop various models using a range of systems analysis techniques to analyse and specify system and user requirements. 5.Work effectively in a small team. Course intended learning outcomes (CILOs) This subject also contributes specifically to the development of the following Course Intended Learning Outcomes (CILOs): Socially Responsible: FEIT graduates identify, engage, interpret and analyse stakeholder needs and cultural perspectives, establish priorities and goals, and identify constraints, uncertainties and risks (social, ethical, cultural, legislative, environmental, economics etc.) to define the system requirements. (B.1) Design Oriented: FEIT graduates apply problem solving, design and decision-making methodologies to develop components, systems and processes to meet specified requirements. (C.1) Technically Proficient: FEIT graduates apply abstraction, mathematics and discipline fundamentals, software, tools and techniques to evaluate, implement and operate systems. (D.1) Collaborative and Communicative: FEIT graduates work as an effective member or leader of diverse teams, communicating effectively and operating within cross-disciplinary and cross-cultural contexts in the workplace. (E.1) Contribution to the development of graduate attributes Engineers Australia Stage 1 Competencies This subject contributes to the development of the following Engineers Australia Stage 1 Competencies: 1.1. Comprehensive, theory based understanding of the underpinning natural and physical sciences and the engineering fundamentals applicable to the engineering discipline. 1.5. Knowledge of engineering design practice and contextual factors impacting the engineering discipline. 1.6. Understanding of the scope, principles, norms, accountabilities and bounds of sustainable engineering practice in the specific discipline. 2.2. Fluent application of engineering techniques, tools and resources. 2.3. Application of systematic engineering synthesis and design processes. 2.4. Application of systematic approaches to the conduct and management of engineering projects. 3.2. Effective oral and written communication in professional and lay domains. 3.6. Effective team membership and team leadership. Teaching and learning strategies This subject uses a lecture followed by a tutorial format. The tutorial provides collaborative and active learning workshops to support a practice-focused learning strategy. This subject is based on a practical case study and provides regular feedback. The teaching and learning approach is based on learning by doing collaborative work based on case studies. In lectures, topics from the recommended texts are covered and additional material from other sources is introduced where necessary. After introducing the concept and topic in the lecture, students will further apply and practice these topics via interactive and collaborative exercises during the workshops in the tutorials. Additionally, students will be provided with illustrative examples, practice exercises and case studies that further reinforce the material. The lecture followed by a tutorial format are also an extra opportunity for students to ask questions and generate a discussion based on Canvas material. Students will engage in a range of activities such as role playing, think-pair-share, attempting short quizzes each week, short presentations, working in groups, group discussion, critiquing other studentsâ€™ work, problem solving exercises, analysing stakeholder needs, etc. During tutorials, students will apply the material and build a working relationship with other team members in a collaborative group learning environment. The collaborative and active learning environment will require students to work with other students in small groups on tutorial and assignment case study exercises. For the assignment case study, students are required to do some pre-work and bring the work in progress (draft models) to the tutorial sessions. Regular feedback will be provided to students each week in the tutorial, for both in-class case studies as well as the assignment case study. This will enable students to identify and correct any issues before formal submission of assignments, and consequently improve their learning and performance in the subject. For weekly assessable quizzes, each week immediate feedback will be provided straight after students have attempted the assessable weekly quizzes. Quizzes will be marked each week and marks will be uploaded to Canvas so that students can track their progress and performance in the subject regularly and before the census date. Please note students are expected to put in some additional study time outside of class time. The University regards a 6 credit point subject as requiring 9-12 hours of study per week, including class time. Students must read the recommended and reference books outside of class time so that they can effectively participate in group work and discussions that are integral to the understanding of the topics. An aim of this subject is to help you develop academic and professional language and communication skills to succeed at university and in the workplace. During the course of this subject, you will complete a milestone assessment task that will, in addition to assessing your subject-specific learning objectives, evaluate your levels of academic and professional communication. Content (topics) 1. Process System development processes (traditional and agile) Requirements engineering processes 2. Elicitation Stakeholders identification Understanding the application domain Requirements elicitation tools and techniques 3. Modelling Process modelling with BPMN Data modelling with ERD Object-oriented modelling with several OO models using UML 4. Specification Software requirements specifications Quality attributes of requirements specifications Assessment Assessment task 1: Short Quizzes Intent: To foster an understanding of theoretical concepts. Objective(s): This assessment task addresses the following subject learning objectives (SLOs): 1, 2, 3 and 4 This assessment task contributes to the development of the following Course Intended Learning Outcomes (CILOs): B.1, C.1 and D.1 Type:Quiz/test Groupwork:Individual Weight:30% Assessment task 2: Weekly Activities Intent: To produce various models and artifacts of software and business requirements via the traditional and agile approach to software development. Objective(s): This assessment task addresses the following subject learning objectives (SLOs): 1, 2, 3, 4 and 5 This assessment task contributes to the development of the following Course Intended Learning Outcomes (CILOs): B.1, C.1, D.1 and E.1 Type:Exercises Groupwork:Group, group assessed Weight:20% Assessment task 3: Requirements Analysis Report Intent: To analyse business processes and capture data via the business process and data models. Objective(s): This assessment task addresses the following subject learning objectives (SLOs): 1, 2, 3, 4 and 5 This assessment task contributes to the development of the following Course Intended Learning Outcomes (CILOs): B.1, C.1, D.1 and E.1 Type:Report Groupwork:Group, individually assessed Weight:20% Length: The recommended word limit for this assignment is maximum 1000 words excluding diagrams, bibliography and appendices. Word limit will be regarded as recommended rather than compulsory, and no student will be disadvantaged by being under or over the recommended word limit. Assessment task 4: OO Requirements Analysis and Specification Report Intent: To analyse and capture the functional and non-functional requirements via the SRS, agile artifacts and object-oriented models. Objective(s): This assessment task addresses the following subject learning objectives (SLOs): 1, 2, 3, 4 and 5 This assessment task contributes to the development of the following Course Intended Learning Outcomes (CILOs): B.1, C.1, D.1 and E.1 Type:Report Groupwork:Group, individually assessed Weight:30% Length: The recommended word limit for this assignment is maximum 3000 words excluding diagrams, bibliography and appendices. Word limit will be regarded as recommended rather than compulsory, and no student will be disadvantaged by being under or over the recommended word limit. Minimum requirements In order to pass the subject, a student must achieve an overall mark of 50% or more. Students are required to participate in the group forming activities in the Week 2 tutorial, and be allocated to a group by the end of the Week 2 tutorial. Students who are not in a group by the end of the Week 2 tutorial may be refused permission to attempt assessment tasks 2, 3 and 4, and a fail will be recorded for the subject. Please refer to UTS Student Rule 3.8. Academic and professional communication: It is a requirement of this subject that you complete Assessment task 4 Should you receive an unsatisfactory language level, you may be required to complete further language support after the completion of this subject. Recommended texts Robertson, S. & Robertson, J. (2013),  Mastering the Requirements Process: getting requirements right , Addison Wesley, 3rd Edition. IIBA (2015),  A Guide to the Business Analysis Body of Knowledge , BABOK (any version). References Bennett, S., McRobb S., & Farmer, R. (2010),  Object-Oriented Systems Analysis and Design Using UML , McGraw Hill, 4th Edition. Leffingwell, D. & Widrig, D. (2003),  Managing Software Requirements â€“ A Use Case Approach , Addison Wesley, Second Edition. Brown, D.W. (2002),  An Introduction to Object-Oriented Analysis â€“ Objects and UML in Plain English  Wiley, Second Edition. Kendall & Kendall. (2014),  Systems Analysis and Design , Pearson Education Inc. Blaha, M & Rumbaugh, J. (2005),  Object-oriented modeling and design with UML , Pearson Prentice Hall, 2nd Edition. Other resources Students are required to login and read notices on the University's standard web-based learning management system, Canvas: https://canvas.uts.edu.au/ In particular, students are required to read at least once a week 'Announcements' on Canvas and also read the Discussion Boards. All subject material including content, tutorial activities, weekly activities and the assignment specifications will be posted on Canvas. Plan to devote at least 1 hour a week or more to Canvas."
https://handbook.uts.edu.au/subjects/details/48230.html,"48230 Introduction to Engineering Projects UTS: Engineering: Professional Practice and Leadership Credit points: 6 cp Subject level: Undergraduate Result type: Grade and marks Anti-requisite(s): 31265 Communication for IT Professionals Description This subject develops students' professional engineering practice skills within the context of a real-life engineering project, through the Engineers Without Borders (EWB) Challenge. Students work in teams to create an appropriate design solution for a given problem as set out in the EWB Challenge Design Brief. While applying the central role of effective communication and teamwork in engineering practice, students develop an understanding of the social, cultural, economic and environmental responsibilities of a professional engineer. This subject is a starting point for students' ongoing professional development that they undertake throughout their studies and as a professional engineer in their career. The skills introduced include understanding and applying principles of effective communication; researching the various discipline areas that inform the development of an engineering design solution; applying the engineering design process to identify, formulate and design a solution to solve a problem while considering socio-technical issues; written and oral communication for engineering contexts; expressing engineering concepts through visual communication; and, leading and participating in team processes. Subject learning objectives (SLOs) Upon successful completion of this subject students should be able to: 1.Demonstrate an awareness of Indigenous Australian cultural, historic, and contemporary contexts in order to inform work in a complex project 2.Identify stakeholder needs through the empathise design stage 3.Apply a design thinking approach to develop solutions that meet stakeholder needs 4.Communicate an evidence-based design solution for an engineering project 5.Explain how different experiences of a diverse team work together to achieve a design solution Course intended learning outcomes (CILOs) This subject also contributes specifically to the development of the following Course Intended Learning Outcomes (CILOs): Indigenous Professional Capability: FEIT graduates are culturally and historically well informed, able to co-design projects as respectful professionals when working in and with Aboriginal and Torres Strait Islander communities. (A.1) Socially Responsible: FEIT graduates identify, engage, interpret and analyse stakeholder needs and cultural perspectives, establish priorities and goals, and identify constraints, uncertainties and risks (social, ethical, cultural, legislative, environmental, economics etc.) to define the system requirements. (B.1) Design Oriented: FEIT graduates apply problem solving, design and decision-making methodologies to develop components, systems and processes to meet specified requirements. (C.1) Collaborative and Communicative: FEIT graduates work as an effective member or leader of diverse teams, communicating effectively and operating within cross-disciplinary and cross-cultural contexts in the workplace. (E.1) Contribution to the development of graduate attributes Engineers Australia Stage 1 Competencies This subject contributes to the development of the following Engineers Australia Stage 1 Competencies: 1.5. Knowledge of engineering design practice and contextual factors impacting the engineering discipline. 2.3. Application of systematic engineering synthesis and design processes. 3.2. Effective oral and written communication in professional and lay domains. 3.6. Effective team membership and team leadership. Teaching and learning strategies Each week students are required to prepare for tutorial classes by completing a set of online pre-class tasks provided on Canvas. The tasks involve such activities as reading from key resources, watching a video, completing a quiz, and other online exercises. Responses to the pre-class tasks are used in tutorial classes to add depth to discussion and are an essential component to the concepts covered throughout the subject. During tutorial classes, students will build on the pre-class tasks to learn and apply new skills. These skills will be practiced in class and are designed to be relevant to the tasks involved in the EWB Challenge team project. Areas of learning in tutorial classes include problem solving, team building, exploring scenarios, design and build activities, project management, reflection and group discussion. Activities support acquisition of professional engineering skills in a small group setting under the supervision of a tutor; these skills relate directly to your major EWB Challenge team project. OPELA: An aim of this subject is to help you develop academic and professional language and communication skills in order to succeed at university and in the workplace. To determine your current academic language proficiency, you are required to complete an online language screening task, OPELA. If you receive a Basic grade for OPELA, you must attend additional Language Development Tutorials (each week from weeks 3 to 12) in order to pass the subject. The development of these tutorials is a new university-wide initiative designed to provide personalised support and enhance studentsâ€™ English language skills. They will focus on developing your communication skills (reading, writing, speaking, listening) and your independent learning skills, which will help you to prepare for the subject assessment tasks and for professional workplace communication tasks. Content (topics) Engineering design process Finding, evaluating and referencing information Academic integrity Consideration of Indigenous stakeholders' knowledge, culture and needs Professional engineering documentation Effective written, visual and oral communication Teamwork processes and participation Assessment Assessment task 1: Individual Background Research Report Intent: To develop report writing skills based on finding, evaluating and referencing information relevant to the team project and to develop understanding of the Indigenous Australian context of the project. Objective(s): This assessment task addresses the following subject learning objectives (SLOs): 1, 2, 3 and 4 This assessment task contributes to the development of the following Course Intended Learning Outcomes (CILOs): A.1, B.1, C.1 and E.1 Type:Report Groupwork:Individual Weight:25% Length: 750 words (10% tolerance), excluding references Assessment task 2: EWB Challenge Team Report Intent: To investigate a complex problem in an Indigenous Australian context and communicate an evidence-based design solution in a professional engineering report. Objective(s): This assessment task addresses the following subject learning objectives (SLOs): 1, 2, 3, 4 and 5 This assessment task contributes to the development of the following Course Intended Learning Outcomes (CILOs): A.1, B.1, C.1 and E.1 Type:Project Groupwork:Group, individually assessed Weight:45% Length: Final Report 5000 words (excluding title page, executive summary, table of contents, reference list and appendices) Assessment task 3: EWB Challenge Team Presentation Intent: To investigate a complex problem in an Indigenous Australian context and present an evidence-based design solution Objective(s): This assessment task addresses the following subject learning objectives (SLOs): 1, 2, 3, 4 and 5 This assessment task contributes to the development of the following Course Intended Learning Outcomes (CILOs): A.1, B.1, C.1 and E.1 Type:Presentation Groupwork:Group, individually assessed Weight:30% Length: Final Presentation 20-minutes with at least 3-minutes per speaker. Minimum requirements In order to pass the subject, a student must achieve an overall mark of 50% or more. Students are required to participate in the team forming activities in the Week 3 tutorial, and self-allocate to a team by the end of Week 4. Students who are not in a team by the end of Week 4 may be refused permission to attempt Assessment Tasks 2 and 3 and a fail will be recorded for the subject. Please refer to UTS Student Rule 3.8. Students who do not contribute to Assessment Task 2 cannot contribute to Assessment Task 3. And will receive a mark of zero for both assessment tasks. It is a requirement of this subject that all students complete OPELA. Students who received a Basic grade in the OPELA test are required to attend 80% of the Language Development Tutorials in order to pass the subject. Please see the UTS Student Rules Section 3.8. Students who do not complete these requirements will have their grade withheld until such time as they complete them. References Recommended readings for this subject, websites and learning resources will be listed on Canvas. An important objective of this subject is to ensure that you are capable of finding and sharing relevant information on a variety of topics, so we will expect you to be resourceful (and ethical) in searching and retrieving information for your work. Other resources Canvas Canvas is a web-based communication package that can be accessed from most web browsers from inside or outside the university. All online materials and programs required to complete the subject are available under 48230 Introduction to Engineering Projects. Students will need to login using their UTS ID and password. Students are expected to use Canvas to access: Subject announcements Weekly pre-class tasks Learning resources for in-class activities, group project, and self-study Assessment task information marking guides (rubrics) Submission of assessment tasks Self and peer evaluation software"